/*
 * Manage Bitcoins for users.
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import javax.validation.constraints.*;

/**
 * object describing a payout job
 */
@ApiModel(description = "object describing a payout job")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-07-13T12:01:01.236Z")
public class Payout   {
  @JsonProperty("payoutId")
  private UUID payoutId = null;

  @JsonProperty("payoutAddress")
  private String payoutAddress = null;

  @JsonProperty("amount")
  private Integer amount = null;

  @JsonProperty("emptyWallet")
  private Boolean emptyWallet = null;

  @JsonProperty("referenceId")
  private String referenceId = null;

  public Payout payoutId(UUID payoutId) {
    this.payoutId = payoutId;
    return this;
  }

   /**
   * Get payoutId
   * @return payoutId
  **/
  @JsonProperty("payoutId")
  @ApiModelProperty(value = "")
  public UUID getPayoutId() {
    return payoutId;
  }

  public void setPayoutId(UUID payoutId) {
    this.payoutId = payoutId;
  }

  public Payout payoutAddress(String payoutAddress) {
    this.payoutAddress = payoutAddress;
    return this;
  }

   /**
   * Get payoutAddress
   * @return payoutAddress
  **/
  @JsonProperty("payoutAddress")
  @ApiModelProperty(value = "")
  public String getPayoutAddress() {
    return payoutAddress;
  }

  public void setPayoutAddress(String payoutAddress) {
    this.payoutAddress = payoutAddress;
  }

  public Payout amount(Integer amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @JsonProperty("amount")
  @ApiModelProperty(value = "")
  public Integer getAmount() {
    return amount;
  }

  public void setAmount(Integer amount) {
    this.amount = amount;
  }

  public Payout emptyWallet(Boolean emptyWallet) {
    this.emptyWallet = emptyWallet;
    return this;
  }

   /**
   * if true, the amount value will be the maximum value paid out. but it will also payout if there is less balance in the wallet
   * @return emptyWallet
  **/
  @JsonProperty("emptyWallet")
  @ApiModelProperty(value = "if true, the amount value will be the maximum value paid out. but it will also payout if there is less balance in the wallet")
  public Boolean getEmptyWallet() {
    return emptyWallet;
  }

  public void setEmptyWallet(Boolean emptyWallet) {
    this.emptyWallet = emptyWallet;
  }

  public Payout referenceId(String referenceId) {
    this.referenceId = referenceId;
    return this;
  }

   /**
   * a place to put describing information
   * @return referenceId
  **/
  @JsonProperty("referenceId")
  @ApiModelProperty(value = "a place to put describing information")
  public String getReferenceId() {
    return referenceId;
  }

  public void setReferenceId(String referenceId) {
    this.referenceId = referenceId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Payout payout = (Payout) o;
    return Objects.equals(this.payoutId, payout.payoutId) &&
        Objects.equals(this.payoutAddress, payout.payoutAddress) &&
        Objects.equals(this.amount, payout.amount) &&
        Objects.equals(this.emptyWallet, payout.emptyWallet) &&
        Objects.equals(this.referenceId, payout.referenceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payoutId, payoutAddress, amount, emptyWallet, referenceId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Payout {\n");
    
    sb.append("    payoutId: ").append(toIndentedString(payoutId)).append("\n");
    sb.append("    payoutAddress: ").append(toIndentedString(payoutAddress)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    emptyWallet: ").append(toIndentedString(emptyWallet)).append("\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

