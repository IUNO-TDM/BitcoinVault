swagger: '2.0'
info:
  title: Manage Bitcoins for users.
  version: 1.0.0
host: 'localhost:8080'
schemes:
  - http
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
  - text/plain
paths:
  /wallets:
    post:
      summary: Creates a new wallet for a user
      operationId: addWallet
      security:
        - Vault_Auth:
            - 'create:wallet'
      parameters:
        - in: body
          name: userId
          description: the userId
          schema:
            $ref: '#/definitions/UserId'
        - name: accessToken
          description: oauth2 accessToken
          in: query
          required: true
          type: string
      responses:
        '201':
          description: wallet created
          schema:
            type: string
            description: the wallet ID
    get:
      summary: returns wallet IDs for userID
      operationId: getWalletId
      security:
        - Vault_Auth:
            - 'read:wallet'
      parameters:
        - name: userId
          description: the users ID the wallet is created for
          in: query
          required: true
          type: string
        - name: accessToken
          description: oauth2 accessToken
          in: query
          required: true
          type: string
      responses:
        '200':
          description: wallet IDs for UserID
          schema:
            type: array
            items:
              type: string
  '/wallets/{walletId}':
    delete:
      summary: delete a user wallet
      operationId: deleteWallet
      security:
        - Vault_Auth:
            - 'delete:wallet'
      parameters:
        - name: walletId
          description: the wallets ID
          in: path
          type: string
          format: uuid
          required: true
        - name: accessToken
          description: oauth2 accessToken
          in: query
          required: true
          type: string
      responses:
        '200':
          description: OK
        '404':
          description: no wallet with this id
          schema:
            $ref: '#/definitions/Error'
  '/wallets/{walletId}/credit':
    get:
      summary: get current credit for wallet
      operationId: getCredit
      security:
        - Vault_Auth:
            - 'read:credit'
      parameters:
        - name: walletId
          description: the wallets ID
          in: path
          type: string
          format: uuid
          required: true
        - name: accessToken
          description: oauth2 accessToken
          in: query
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: no wallet with this id
          schema:
            $ref: '#/definitions/Error'
  '/wallets/{walletId}/confirmedcredit':
    get:
      summary: get current confirmed credit for wallet
      operationId: getConfirmedCredit
      security:
        - Vault_Auth:
            - 'read:credit'
      parameters:
        - name: walletId
          description: the wallets ID
          in: path
          type: string
          format: uuid
          required: true
        - name: accessToken
          description: oauth2 accessToken
          in: query
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: no wallet with this id
          schema:
            $ref: '#/definitions/Error'
  '/wallets/{walletId}/transactions':
    get:
      summary: get txs with utxo for wallet
      operationId: getTransactions
      security:
        - Vault_Auth:
            - 'read:credit'
      parameters:
        - name: walletId
          description: the wallets ID
          in: path
          type: string
          format: uuid
          required: true
        - name: accessToken
          description: oauth2 accessToken
          in: query
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '404':
          description: no wallet with this id
          schema:
            $ref: '#/definitions/Error'
  '/wallets/{walletId}/payouts':
    get:
      summary: returns payout IDs
      operationId: getPayoutsForWalletId
      security:
        - Vault_Auth:
            - 'read:payouts'
      parameters:
        - name: walletId
          description: the wallets ID
          in: path
          type: string
          format: uuid
          required: true
        - name: accessToken
          description: oauth2 accessToken
          in: query
          required: true
          type: string
      responses:
        '200':
          description: payout IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
          headers:
            Location:
              description: the absolute path to the created resource
              type: string
        '403':
          description: wrong authCode or not authorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: no wallet with this id
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: set PayoutAddress and iniate Payout
      operationId: createPayoutForWallet
      security:
        - Vault_Auth:
            - 'create:payout'
      parameters:
        - name: walletId
          description: the wallets ID
          in: path
          type: string
          format: uuid
          required: true
        - name: payout
          description: the payoutAddress
          in: body
          required: true
          schema:
            $ref: '#/definitions/Payout'
        - name: accessToken
          description: oauth2 accessToken
          in: query
          required: true
          type: string
      responses:
        '201':
          description: payout succeessfully created
          schema:
            $ref: '#/definitions/Payout'
          headers:
            Location:
              description: the absolute path to the created resource
              type: string
        '403':
          description: wrong authCode or not authorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: no wallet with this id
          schema:
            $ref: '#/definitions/Error'
  '/wallets/{walletId}/payouts/{payoutId}':
    get:
      summary: Get payout
      operationId: getPayout
      security:
        - Vault_Auth:
            - 'read:payouts'
      parameters:
        - name: walletId
          description: the wallets ID
          in: path
          type: string
          format: uuid
          required: true
        - name: payoutId
          description: the payout ID
          in: path
          type: string
          format: uuid
          required: true
        - name: accessToken
          description: oauth2 accessToken
          in: query
          required: true
          type: string
      responses:
        '200':
          description: payout object
          schema:
            $ref: '#/definitions/Payout'
        '403':
          description: wrong authCode or not authorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: no wallet with this id
          schema:
            $ref: '#/definitions/Error'
  '/wallets/{walletId}/payouts/{payoutId}/transactions':
    get:
      summary: Get payout transaction(s)
      operationId: getPayoutTransactions
      security:
        - Vault_Auth:
            - 'read:payouts'
      parameters:
        - name: walletId
          description: the wallets ID
          in: path
          type: string
          format: uuid
          required: true
        - name: payoutId
          description: the payout ID
          in: path
          type: string
          format: uuid
          required: true
        - name: accessToken
          description: oauth2 accessToken
          in: query
          required: true
          type: string
      responses:
        '200':
          description: list of transactions
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '403':
          description: wrong authCode or not authorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: no wallet with this id
          schema:
            $ref: '#/definitions/Error'
  '/wallets/{walletId}/newaddress':
    get:
      summary: get new receive address
      operationId: getNewAddress
      security:
        - Vault_Auth:
            - 'get:address'
      parameters:
        - name: walletId
          description: the wallets ID
          in: path
          type: string
          format: uuid
          required: true
        - name: accessToken
          description: oauth2 accessToken
          in: query
          required: true
          type: string
      responses:
        '200':
          description: here is a new reveiving address
          schema:
            type: string
        '404':
          description: no wallet with this id
          schema:
            $ref: '#/definitions/Error'
  '/wallets/{walletId}/publicSeed':
    get:
      summary: get the Public Seed of the keychain
      operationId: getPublicSeed
      security:
        - Vault_Auth:
            - 'read:publicseed'
      parameters:
        - name: walletId
          description: the wallets ID
          in: path
          type: string
          format: uuid
          required: true
        - name: accessToken
          description: oauth2 accessToken
          in: query
          required: true
          type: string
      responses:
        '200':
          description: here is the public seed
          schema:
            type: string
        '404':
          description: no wallet with this id
          schema:
            $ref: '#/definitions/Error'
securityDefinitions:
  Vault_Auth:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'http://none'
    tokenUrl: 'http://none'
    scopes:
      'create:wallet': Create a Wallet
      'read:wallet': Read Wallet information
      'delete:wallet': Delete a Wallet
      'read:credit': readout the credit for wallet
      'read:publicseed': get the publicseed for wallet
      'get:address': get a fresh address for a wallet
      'create:payout': create payout
      'read:payouts': get Payout information
definitions:
  Payout:
    description: object describing a payout job
    type: object
    properties:
      payoutId:
        type: string
        format: uuid
      payoutAddress:
        type: string
      amount:
        type: integer
        format: int32
      emptyWallet:
        type: boolean
        description: >-
          if true, the amount value will be the maximum value paid out. but it
          will also payout if there is less balance in the wallet
      referenceId:
        type: string
        description: a place to put describing information
  UserId:
    description: an object with the userid inside
    type: object
    properties:
      userId:
        type: string
  Transaction:
    description: incoming or outgoing tx fullfilling an invoice
    type: object
    properties:
      txid:
        type: string
        description: the txid
      state:
        type: string
        description: confidence state
        default: unknown
        enum:
          - building
          - pending
          - dead
          - unknown
          - conflict
      depthInBlocks:
        type: integer
        format: int32
        description: depth of a building transaction in blocks
      amount:
        type: integer
        format: int32
        description: The amount of satoshies received by this tx
  Error:
    type: object
    properties:
      message:
        type: string
        description: meaningful error message
